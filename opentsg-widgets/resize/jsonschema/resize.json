{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Test Card Schema",
    "description": "The Schmea for the resize widget of the test signal generator",
    "type": "object",
    "properties": {
        "xDetections": {  "type" : "array",
        "items" :{
            "$ref": "#/$defs/dist"}},
        "yDetections": {
            "type" : "array",
            "items" :{
                "$ref": "#/$defs/dist"}
            
        },
        "xStep": {
            "$ref": "#/$defs/dist"
        },
        "yStep": {
            "$ref": "#/$defs/dist"
        },
        "xStepEnd": {
            "$ref": "#/$defs/dist"
        },
        "yStepEnd": {
            "$ref": "#/$defs/dist"
        },
        "graticule": {
            "type": "object",
            "properties" : {
                "textColor": {
                    "$ref": "#/$defs/anycolour"
                },
                "graticuleColor": {
                    "$ref": "#/$defs/anycolour"
                },
                "position" : {
                    "enum" : ["middle", "left", "right", "top", "bottom"]
                }
            }
        }
    },
    "additionalProperties": false,
    "$defs": {
        "anycolour": {
            "anyOf": [
                {
                    "$ref": "#/$defs/colourReg/6hex"
                },
                {
                    "$ref": "#/$defs/colourReg/3hex"
                },
                {
                    "$ref": "#/$defs/colourReg/8hex"
                },
                {
                    "$ref": "#/$defs/colourReg/4hex"
                },
                {
                    "$ref": "#/$defs/colourReg/cssrgb"
                },
                {
                    "$ref": "#/$defs/colourReg/cssrgba"
                },
                {
                    "$ref": "#/$defs/colourReg/cssrgb12"
                },
                {
                    "$ref": "#/$defs/colourReg/cssrgba12"
                }
            ]
        },
        "dist": {
            "anyOf": [
                {
                    "$ref": "#/$defs/percent1"
                },
                {
                    "$ref": "#/$defs/percent2"
                },
                {
                    "$ref": "#/$defs/percent3"
                },
                {
                    "$ref": "#/$defs/pixel"
                }
            ]
        },
        "pixel": {
            "type": "string",
            "desciption": "pattern requires a pi then star with a number, which can be divided by a resulting number",
            "pattern": "^-{0,1}\\d{1,}px$",
            "description": "pixel value to move the image"
        },
        "percent1": {
            "type": "string",
            "desciption": "pattern requires a pi then star with a number, which can be divided by a resulting number",
            "pattern": "^-{0,1}\\d{0,2}\\.{1}\\d{0,}%$|^-{0,1}\\d{0,2}%$|^-{0,1}(100)%$|^100\\.[0]*%$",
            "description": "percentage value to move the image, e.g. 25%"
        },
        "percent2": {
            "type": "number",
            "minimum": -100,
            "maximum": 100,
            "description": "The percentage of the image for it to be shifted"
        },
        "percent3": {
            "type": "string",
            "pattern": "^-{0,1}\\d{0,2}\\.{1}\\d{0,}$|^-{0,1}\\d{0,2}$|^-{0,1}(100)$",
            "description": "The percentage of the image for it to be shifted"
        },
        "colourReg": {
            "6hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{6}$",
                "description": "## Example\n This follows the pattern #rrggbb in hexcode, the values can be 0-9 and a-f e.g. #c45ea3 is acceptable but #aga6ah is not."
            },
            "3hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{3}$",
                "description": "## Example\nThis follows the pattern #rgb in single hexcode, the values can be 0-9 and a-f e.g. #c53 is acceptable but #g6h is not."
            },
            "8hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{8}$",
                "description": "## Example\nThis follows the pattern #rrggbbaa in hexcode, the values can be 0-9 and a-f e.g. #c45ea3ff is acceptable but #aga6ahff is not."
            },
            "4hex": {
                "type": "string",
                "pattern": "^#[A-Fa-f0-9]{4}$",
                "description": "## Example\nThis follows the pattern #rgba in single hexcode, the values can be 0-9 and a-f e.g. #c53f is acceptable but #g6h is not."
            },
            "cssrgba": {
                "type": "string",
                "pattern": "^(rgba\\()\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\)$",
                "description": "## Example\nThis follows the pattern rgba(rval,gval,bval,aval), the values are between 0.255 e.g. rgb(240,220,4,255) is acceptable but rgb(240,-5,400,23) is not."
            },
            "cssrgb": {
                "type": "string",
                "pattern": "^(rgb\\()\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5]),\\b([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\)$",
                "description": "## Example\nThis follows the pattern rgb(rval,gval,bval), the values are between 0.255 e.g. rgb(240,220,4) is acceptable but rgb(240,-5,400) is not."
            },
            "cssrgb12": {
                "type": "string",
                "pattern": "^rgb12\\(([0-3]?[0-9]{1,3}|40[0-9][0-5]|40[0-8][0-9]),([0-3]?[0-9]{1,3}|40[0-9][0-5]|40[0-8][0-9]),([0-3]?[0-9]{1,3}|40[0-9][0-5]|40[0-8][0-9])\\)$$"
            },
            "cssrgba12": {
                "type": "string",
                "pattern": "^rgba12\\(([0-3]?[0-9]{1,3}|40[0-9][0-5]|40[0-8][0-9]),([0-3]?[0-9]{1,3}|40[0-9][0-5]|40[0-8][0-9]),([0-3]?[0-9]{1,3}|40[0-9][0-5]),([0-3]?[0-9]{1,3}|40[0-9][0-5]|40[0-8][0-9])\\)$"
            }
        }
    }
}